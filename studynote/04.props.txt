[4.0 props]
Props란? 부모 컴포넌트로부터 자식 컴포넌트에 데이터를 보낼 수 있게 해 주는 방법.

우리가 회사 어플리케이션을 만들다고 가정하자.
이 어플에는 많은 버튼이 있다. (로그인, 컨펌, 취소 등)

* 컴포넌트는 어떤 JSX를 반환하는 함수이다.

우리가 리액트를 모른다면? 버튼을 컴포넌트를 하나씩 만들 것이다.

funtion을 이용해서 컴포넌트를 각가 만들었다고 가정하자. saveBtn, confirmBtn 등 

디자이너가 이거 만들고나서 구렸다고 피드백을 준다! 이제 어떻게 고칠 것인가?

전부 다 고쳐줘야한다. 으아아ㅏ!! 

Props를 이용하면 이 문제 해결 가능.


우리가 html에서 쓰던 syntax를, 우리의 커스텀 컴포넌트에 똑같이 적용할 수 있다.
예를 들면, <input type="" /> <img src="" /> 같은 거 ㅎㅎ

"새로운"정보를 Btn 컴포넌트에 전달하기

모든 컴포넌트들은 () 안에 인자를 받는다. 리액트가 넣어준다.
첫 번째 argument이름은 마음대로 넣지만, props로 부른다.
Btn으로부터 전달받는 property. 정보를 자식에게 전달

우리가 만든 모든 prope들을, 오브젝트 안으로 만들어준다.
그 오브젝트는 내 컴포넌트의 첫번째 인자로 주어진다.
두번째 인자는 없고, 첫 번째이자 유일한 인자다.

객체 형태로 전해지는 prop은 꺼내 먹을 수 있다.

props를 쓰지 않고, props.txt 를 쓰지 않고 간단하게 쓰는 법
({txt}) 로 받을 수 있다.
props가 오브젝트이기 때문에, {}로 꺼내 쓸 수 있는 것이다.


[4.1 Memo]
부모 컴포넌트가 props를 내려보낼 때, 다른 컴포넌트에는 무슨 일이 일어날까?
헷갈리지 말기 : 컴포넌트의 props들은 html 태그 안에 들어가는 것과 다르다. 헷갈리지 말것!

부모 컴포넌트에서 state 변경을 겪을 때, 밑에 있는 모든 요소들이 리렌더링된다.

React memo : 우리는 이 컴포넌트가 rerender 되는 걸 원하지 않는다고 말할 수 있다. (prop이 변경되지 않는 한에서.)


console.log(txt, "was rendered") 찍어 봤을 때, 변화가 일어난 버튼뿐만 아니라 다른 애들도 쪼로로 리렌더링된다는 사실을 알 수 있다.

하지만 memo에다가 컴포넌트를 담으면, 필요 없는 애들까지 리렌더링 되는 걸 막아준다. 

어플 실행 속도를 빠르게 해주는 등 알아두면 좋다!


[4.2 props type]
수많은 props가 있다고 가정해보자. 팀원이 실수로 prop으로 넘기지 말아야 할 것 (스트링, 넘버 등 그 자리에 들어가면 안되는 거)을 넘겼다고 생각해보자.

하지만 ReactJS는 뭐가 잘못된건지 모름.

-> prop-types를 이용한다!
<script src="https://unpkg.com/prop-types@15.6/prop-types.min.js"></script>

이걸로 ReactJS에게 우리의 props 형태가 무엇인지를 알려줄 것이다.
불리언, 함수, 오브젝트, 등 많은 것들을 테스트할 수 있다!!!

isrequired 이용하면 꼭 들어가야하는 값이 된다!

default value 값 주기
undefined일 경우? 정해놓는다
function Btn({ txt, fontSize = 14, onClick });
기본값 설정~!


[4.3 Recap]
prop을 이용해서 마크업, 스타일을 계속 재사용할 수 있다.
컴포넌트의 prop 이용하기 : 자식 컴포넌트의 첫 번째 인자. 
접근하고 싶으면, props.text / props.fonSize라고 적는다.
아니면 ES6의 쉬운 방법 -> 오브젝트 안의 요소들을 빼오면 된다. (중괄호 안에 props 이름 넣기)
우리는 이 prop을 이용해 string도, number도, function도 모두모두 보낼 수 있게 된다!!!
우리가 실수로 잘못된 prop을 넘기지 않기 위해서 prop-type라는 게 필요하다. 

Btn.proptypes = {
    txt: PropTypes.string.isRequired
}
이런 식으로 쓴다 ㅎㅎ
isRequired는 필수요소일 때 써주기

기본값 지정 가능 -> 인자 오브젝트에다가 값 주면 됨

