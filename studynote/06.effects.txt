[6.0 Introduction]

우리가 해결해야 하는 문제가
state가 ㄱender될때마다, 반복 실행되어도  괜찮은 코드도 있지만

그러나 가끔 component가 처음 load될때만 실행되어야 하는 코드도 있다.

예를들면, state를 사용하면 state가 변할 때마다 렌더가 될 것이다.

그래서 첫 번째 render에만 실행되고, 두 번째, 세 번째 렌더에서는 코드가 실행 안되게 하는 게 필요하다.

예를 들면, 컴포넌트가 처음 로드될 때만 API call하고, 두 번째나 세 번재 로딩부터는 api 불러오지 않게 해야한다.

나중에 state가 변하고 렌더링이 되도 첫 번째만 코드가 실행되게 하는 방법!


[6.1 useEffect]
우리는 코드를 딱 한 번만 실행하고, 그 뒤부터는 실행하지 않을 것이다!

useEffect
첫번째 인자 : 우리가 딱 한번만 실행하고 싶은 코드가
두번쨰 인자 : 

  console.log("I run all the time.")
  const iRunOnlyOnce = () => {
    console.log("I run only once.")
  }
  useEffect(iRunOnlyOnce, []);
이렇게 해보긔 런 올더다팀은 렌더링 될때마다 실행되는데, 런온리원스는 한번만..!!


[6.2 Deps]
다른 문제를 찾아보자.
까먹지말긔 : 이벤트리스너(onChange, onClick)들은 이벤트값을 항상 뱉는다.

onChange로 타이핑이 될 때마다 할때마다 API호출하면? 끔찍하다 ㅎㅎ
바꾸고 싶은 부분을 바꾸거나 값에 변화를 줬을 때, 다른 코드들이 계속 실행되면? 완전 비효율적.

-> 내 코드의 특정한 부분이 변화했을 때, 원하는 코드들을 실행할 수 있는 방법이 필요하다.

ex) movie의 state가 변화할 때만 search를 실행한다.


useEffect의 두 번째 인자 : 어떤 코드가 변화할 때 코드를 실행해야 하는지 react에게 알려준다.

그래서 빈 array를 적어주면, 단 한번만 실행되게 된다. (지켜볼 대상이 없기 때문이다.)

무언가가 변화할 때 , 특정 코드를 실행시킬 수 있다. 수퍼 쿨이다.
(나는 useEffect의 괄호가 저런 건줄 이번에 처음 알았다구..ㅋ.ㅋㅋㅋㅋ)

배열 안에는 변수명 여러개도 적어줄 수 있다. 쉼표로 구분함ㅎㅎㅎ

[6.3 Recap]
- react.js는 변화가 일어날 때 refresh 된다.
- 하지만, 모두 리프레쉬 되는 게 문제 ;;
- 한 번만 일어나야 할 때
- 어떤 값에 변화가 있을 때만 코드를 실행하고 싶다면?

useEffect가 정답니다.
인자 1 : 실행하고자 하는 코드
인자 2 : dependencies : reactJS가 지켜봐야 하는 것(값이 변하는지 안 변하는지)

- dependencies가 없으면, reactJS가 지켜봐야 할 게 없다는 뜻이므로 코드는 한 번만 실행된다.
- 배열 안에는 두 개 이상도 적어줄 수 있다. (두 개 중 하나~~~)
- reactJS의 기본원리 : state를 변화시킬 때 component를 재 실행시키는 것.

- UI 관점에서는 새로운 데이터가 들어올 때마다 새로고침 되서 좋긴 한데...
- 우리는 useEffect를 통해 언제 코드를 실행할지 선택권을 가질 수 있다.

[6.4 Cleanup]
우리가 숨기거나 보여줄 것은 다른 component들일 것이다.

useEffect가 할 수 있는 것..!! 
컴포넌트가 destroy 될 때도 코드를 실행시킬 수 있다.
우리가 할 것은 단지 component가 destroy될 때 실행 될 function을 하나 만드는 것이다.

누군가는 component가 없어질 때 analytics를 보내고 싶어할 것이다.

destroy될 코드는 return으로!